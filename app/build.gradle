apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

ext {
    versionNumber = computeVersionNumber()
    versionName = rootProject.version
    keystorePath = properties.keystorePath
    storePassword = properties.storePassword
    keyAlias = properties.keyAlias
    keyPassword = properties.keyPassword
    println "HyperTrack Live version is " + versionName
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.hypertrack.live"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode project.ext.versionNumber
        versionName project.ext.versionName
        testInstrumentationRunner
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {

        if (project.ext.keystorePath != null) {
            debug {
                storeFile file(project.ext.keystorePath)
                storePassword project.ext.storePassword
                keyAlias project.ext.keyAlias
                keyPassword project.ext.keyPassword
            }
            release {
                storeFile file(project.ext.keystorePath)
                storePassword project.ext.storePassword
                keyAlias project.ext.keyAlias
                keyPassword project.ext.keyPassword
            }
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            debuggable true
            if (signingConfigs.hasProperty("debug")) {
                signingConfig signingConfigs.debug
            }
        }

        release {
            minifyEnabled false
            shrinkResources false
            debuggable false

            if (signingConfigs.hasProperty("release")) {
                signingConfig signingConfigs.release
            }
        }
    }
}

repositories {
    mavenLocal()
    maven {
        name 'hypertrack'
        url 'http://m2.hypertrack.com'
    }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.libraries.places:places:2.4.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.14'

    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.16.7'

    implementation 'com.hypertrack:hypertrack:6.4.0'
    implementation 'com.hypertrack:hypertrack-views:0.8.6'
    implementation 'com.hypertrack:maps-google:0.1.8'
    implementation project(':hypertrack-backend')

    implementation 'com.airbnb.android:lottie:3.1.0'

    // branch.io
    implementation 'io.branch.sdk.android:library:5.0.1'
    implementation 'com.google.firebase:firebase-appindexing:19.1.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.threeten:threetenbp:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def computeVersionNumber() {

    def versionString = rootProject.version
    def match = (versionString =~ /(\d+)\.(\d+)\.(\d+)/)
    if (match) {
        def versionMajor = match.group(1).toInteger()
        def versionMinor = match.group(2).toInteger()
        def versionPatch = match.group(3).toInteger()
        return versionMajor * 1000000 + versionMinor * 10000 + versionPatch
    }
    throw new Exception("Could not read version.properties!")
}
